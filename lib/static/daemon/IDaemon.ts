import IDaemonBase = require("../../daemon/IDaemon");
import IException  = require("../exception/IException");
import IResponse   = require("../IResponse");
import IMemory     = require("../../memory/client/IClient");

interface IDaemon extends IDaemonBase {
    memoryNamespace:string;
    metadataNamespace:string;
    binaryNamespace:string;
    gzipNamespace:string;
    lockNamespace:string;
    sourcesDirectory:string;
    includeDirectories:string[];
    useIndex:boolean;
    indexExtensions:string[];
    useGzip:boolean;
    gzipMinLength:number;
    gzipExtensions:string[];
    gzipCompressionLevel:number;
    memoryLocation:string;
    metadataLocation:string;
    binaryLocation:string;
    gzipLocation:string;
    lockLocation:string;
    metadataTimeout:number;
    binaryTimeout:number;
    gzipTimeout:number;
    lockTimeout:number;
    memoryTimeout:number;
    getMemoryTimeout():number;
    setMemoryTimeout(timeout:number):void;
    setMetadataTimeout(timeout:number):void;
    getMetadataTimeout():number;
    setBinaryTimeout(timeout:number):void;
    getBinaryTimeout():number;
    setGzipTimeout(timeout:number):void;
    getGzipTimeout():number;
    setLockTimeout(timeout:number):void;
    getLockTimeout():number;
    setMemoryLocation(location:string):void;
    getMemoryLocation():string;
    setMetadataLocation(location:string):void;
    getMetadataLocation():string;
    setBinaryLocation(location:string):void;
    getBinaryLocation():string;
    setGzipLocation(location:string):void;
    getGzipLocation():string;
    setLockLocation(location:string):void;
    getLockLocation():string;
    getMemoryNamespace():string;
    setMemoryNamespace(namespace:string):void;
    getMetadataNamespace():string;
    setMetadataNamespace(namespace:string):void;
    getBinaryNamespace():string;
    setBinaryNamespace(namespace:string):void;
    getGzipNamespace():string;
    setGzipNamespace(namespace:string):void;
    getLockNamespace():string;
    setLockNamespace(namespace:string):void;
    getIncludeDirectories():string[];
    setIncludeDirectories(directories:string[]):void;
    getSourcesDirectory():string;
    setSourcesDirectory(directory:string):void;
    isUseIndex():boolean;
    getIsUseIndex():boolean;
    setIsUseIndex(value:boolean):void;
    getIndexExtensions():string[];
    setIndexExtensions(extensions:string[]):void;
    isUseGzip():boolean;
    getIsUseGzip():boolean;
    setIsUseGzip(value:boolean):void;
    getGzipMinLength():number;
    setGzipMinLength(length:number):void;
    getGzipExtensions():string[];
    setGzipExtensions(extensions:string[]):void;
    getGzipCompressionLevel():number;
    setGzipCompressionLevel(level:number):void;
    getContent(filename:string, callback?:(errors:IException[], result:IResponse) => void):void;
}

export = IDaemon;
