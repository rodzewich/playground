/******************************************************************************
 *                   THIS FILE WAS AUTOMATICALLY GENERATED.                   *
 *                    PLEASE DON'T EDIT THIS FILE BY HAND.                    *
 ******************************************************************************/

class KindType {

    private _value:number;

    constructor(value:number) {
        this._value = value;
    }

    public getValue():number {
        return this._value;
    }

    public equal(value:any):boolean {
        if (value instanceof KindType) {
            return this._value === (<KindType>value).getValue();
        }
        return this._value === value;
    }

    public static ABSTRACT_KEYWORD:KindType = new KindType(113);
    public static AMPERSAND_AMPERSAND_TOKEN:KindType = new KindType(50);
    public static AMPERSAND_EQUALS_TOKEN:KindType = new KindType(64);
    public static AMPERSAND_TOKEN:KindType = new KindType(45);
    public static ANY_KEYWORD:KindType = new KindType(115);
    public static ARRAY_BINDING_PATTERN:KindType = new KindType(160);
    public static ARRAY_LITERAL_EXPRESSION:KindType = new KindType(162);
    public static ARRAY_TYPE:KindType = new KindType(154);
    public static ARROW_FUNCTION:KindType = new KindType(172);
    public static ASTERISK_EQUALS_TOKEN:KindType = new KindType(58);
    public static ASTERISK_TOKEN:KindType = new KindType(37);
    public static ASYNC_KEYWORD:KindType = new KindType(116);
    public static AS_EXPRESSION:KindType = new KindType(187);
    public static AS_KEYWORD:KindType = new KindType(114);
    public static AT_TOKEN:KindType = new KindType(54);
    public static AWAIT_EXPRESSION:KindType = new KindType(176);
    public static AWAIT_KEYWORD:KindType = new KindType(117);
    public static BAR_BAR_TOKEN:KindType = new KindType(51);
    public static BAR_EQUALS_TOKEN:KindType = new KindType(65);
    public static BAR_TOKEN:KindType = new KindType(46);
    public static BINARY_EXPRESSION:KindType = new KindType(179);
    public static BINDING_ELEMENT:KindType = new KindType(161);
    public static BLOCK:KindType = new KindType(190);
    public static BOOLEAN_KEYWORD:KindType = new KindType(118);
    public static BREAK_STATEMENT:KindType = new KindType(201);
    public static CALL_EXPRESSION:KindType = new KindType(166);
    public static CALL_SIGNATURE:KindType = new KindType(145);
    public static CARET_TOKEN:KindType = new KindType(47);
    public static CASE_BLOCK:KindType = new KindType(218);
    public static CASE_CLAUSE:KindType = new KindType(239);
    public static CASE_KEYWORD:KindType = new KindType(69);
    public static CATCH_CLAUSE:KindType = new KindType(242);
    public static CATCH_KEYWORD:KindType = new KindType(70);
    public static CLASS_DECLARATION:KindType = new KindType(212);
    public static CLASS_EXPRESSION:KindType = new KindType(184);
    public static CLASS_KEYWORD:KindType = new KindType(71);
    public static CLOSE_BRACE_TOKEN:KindType = new KindType(16);
    public static CLOSE_BRACKET_TOKEN:KindType = new KindType(20);
    public static CLOSE_PAREN_TOKEN:KindType = new KindType(18);
    public static COLON_TOKEN:KindType = new KindType(53);
    public static COMMA_TOKEN:KindType = new KindType(24);
    public static COMPUTED_PROPERTY_NAME:KindType = new KindType(134);
    public static CONDITIONAL_EXPRESSION:KindType = new KindType(180);
    public static CONSTRUCTOR:KindType = new KindType(142);
    public static CONSTRUCTOR_KEYWORD:KindType = new KindType(119);
    public static CONSTRUCTOR_TYPE:KindType = new KindType(151);
    public static CONSTRUCT_SIGNATURE:KindType = new KindType(146);
    public static CONST_KEYWORD:KindType = new KindType(72);
    public static CONTINUE_KEYWORD:KindType = new KindType(73);
    public static CONTINUE_STATEMENT:KindType = new KindType(200);
    public static COUNT:KindType = new KindType(270);
    public static DEBUGGER_KEYWORD:KindType = new KindType(74);
    public static DEBUGGER_STATEMENT:KindType = new KindType(208);
    public static DECLARE_KEYWORD:KindType = new KindType(120);
    public static DECORATOR:KindType = new KindType(137);
    public static DEFAULT_CLAUSE:KindType = new KindType(240);
    public static DEFAULT_KEYWORD:KindType = new KindType(75);
    public static DELETE_EXPRESSION:KindType = new KindType(173);
    public static DELETE_KEYWORD:KindType = new KindType(76);
    public static DOT_DOT_DOT_TOKEN:KindType = new KindType(22);
    public static DOT_TOKEN:KindType = new KindType(21);
    public static DO_KEYWORD:KindType = new KindType(77);
    public static DO_STATEMENT:KindType = new KindType(195);
    public static ELEMENT_ACCESS_EXPRESSION:KindType = new KindType(165);
    public static ELSE_KEYWORD:KindType = new KindType(78);
    public static EMPTY_STATEMENT:KindType = new KindType(192);
    public static END_OF_FILE_TOKEN:KindType = new KindType(1);
    public static ENUM_DECLARATION:KindType = new KindType(215);
    public static ENUM_KEYWORD:KindType = new KindType(79);
    public static ENUM_MEMBER:KindType = new KindType(245);
    public static EQUALS_EQUALS_EQUALS_TOKEN:KindType = new KindType(32);
    public static EQUALS_EQUALS_TOKEN:KindType = new KindType(30);
    public static EQUALS_GREATER_THAN_TOKEN:KindType = new KindType(34);
    public static EXCLAMATION_EQUALS_EQUALS_TOKEN:KindType = new KindType(33);
    public static EXCLAMATION_EQUALS_TOKEN:KindType = new KindType(31);
    public static EXCLAMATION_TOKEN:KindType = new KindType(48);
    public static EXPORT_ASSIGNMENT:KindType = new KindType(225);
    public static EXPORT_DECLARATION:KindType = new KindType(226);
    public static EXPORT_KEYWORD:KindType = new KindType(80);
    public static EXPORT_SPECIFIER:KindType = new KindType(228);
    public static EXPRESSION_STATEMENT:KindType = new KindType(193);
    public static EXPRESSION_WITH_TYPE_ARGUMENTS:KindType = new KindType(186);
    public static EXTENDS_KEYWORD:KindType = new KindType(81);
    public static EXTERNAL_MODULE_REFERENCE:KindType = new KindType(230);
    public static FALSE_KEYWORD:KindType = new KindType(82);
    public static FINALLY_KEYWORD:KindType = new KindType(83);
    public static FIRST_ASSIGNMENT:KindType = new KindType(55);
    public static FIRST_BINARY_OPERATOR:KindType = new KindType(25);
    public static FIRST_FUTURE_RESERVED_WORD:KindType = new KindType(104);
    public static FIRST_KEYWORD:KindType = new KindType(68);
    public static FIRST_LITERAL_TOKEN:KindType = new KindType(8);
    public static FIRST_NODE:KindType = new KindType(133);
    public static FIRST_PUNCTUATION:KindType = new KindType(15);
    public static FIRST_TEMPLATE_TOKEN:KindType = new KindType(11);
    public static FIRST_TOKEN:KindType = new KindType(0);
    public static FIRST_TRIVIA_TOKEN:KindType = new KindType(2);
    public static FIRST_TYPE_NODE:KindType = new KindType(149);
    public static FOR_IN_STATEMENT:KindType = new KindType(198);
    public static FOR_KEYWORD:KindType = new KindType(84);
    public static FOR_OF_STATEMENT:KindType = new KindType(199);
    public static FOR_STATEMENT:KindType = new KindType(197);
    public static FROM_KEYWORD:KindType = new KindType(131);
    public static FUNCTION_DECLARATION:KindType = new KindType(211);
    public static FUNCTION_EXPRESSION:KindType = new KindType(171);
    public static FUNCTION_KEYWORD:KindType = new KindType(85);
    public static FUNCTION_TYPE:KindType = new KindType(150);
    public static GET_ACCESSOR:KindType = new KindType(143);
    public static GET_KEYWORD:KindType = new KindType(121);
    public static GREATER_THAN_EQUALS_TOKEN:KindType = new KindType(29);
    public static GREATER_THAN_GREATER_THAN_EQUALS_TOKEN:KindType = new KindType(62);
    public static GREATER_THAN_GREATER_THAN_GREATER_THAN_EQUALS_TOKEN:KindType = new KindType(63);
    public static GREATER_THAN_GREATER_THAN_GREATER_THAN_TOKEN:KindType = new KindType(44);
    public static GREATER_THAN_GREATER_THAN_TOKEN:KindType = new KindType(43);
    public static GREATER_THAN_TOKEN:KindType = new KindType(27);
    public static HERITAGE_CLAUSE:KindType = new KindType(241);
    public static IDENTIFIER:KindType = new KindType(67);
    public static IF_KEYWORD:KindType = new KindType(86);
    public static IF_STATEMENT:KindType = new KindType(194);
    public static IMPORT_CLAUSE:KindType = new KindType(221);
    public static IMPORT_DECLARATION:KindType = new KindType(220);
    public static IMPORT_EQUALS_DECLARATION:KindType = new KindType(219);
    public static IMPORT_KEYWORD:KindType = new KindType(87);
    public static IMPORT_SPECIFIER:KindType = new KindType(224);
    public static INDEX_SIGNATURE:KindType = new KindType(147);
    public static INSTANCE_OF_KEYWORD:KindType = new KindType(89);
    public static INTERFACE_DECLARATION:KindType = new KindType(213);
    public static INTERFACE_KEYWORD:KindType = new KindType(105);
    public static INTERSECTION_TYPE:KindType = new KindType(157);
    public static IN_KEYWORD:KindType = new KindType(88);
    public static IS_KEYWORD:KindType = new KindType(122);
    public static JSDOC_ALL_TYPE:KindType = new KindType(248);
    public static JSDOC_ARRAY_TYPE:KindType = new KindType(250);
    public static JSDOC_COMMENT:KindType = new KindType(263);
    public static JSDOC_CONSTRUCTOR_TYPE:KindType = new KindType(261);
    public static JSDOC_FUNCTION_TYPE:KindType = new KindType(259);
    public static JSDOC_NON_NULLABLE_TYPE:KindType = new KindType(254);
    public static JSDOC_NULLABLE_TYPE:KindType = new KindType(253);
    public static JSDOC_OPTIONAL_TYPE:KindType = new KindType(258);
    public static JSDOC_PARAMETER_TAG:KindType = new KindType(265);
    public static JSDOC_RECORD_MEMBER:KindType = new KindType(256);
    public static JSDOC_RECORD_TYPE:KindType = new KindType(255);
    public static JSDOC_RETURN_TAG:KindType = new KindType(266);
    public static JSDOC_TAG:KindType = new KindType(264);
    public static JSDOC_TEMPLATE_TAG:KindType = new KindType(268);
    public static JSDOC_THIS_TYPE:KindType = new KindType(262);
    public static JSDOC_TUPLE_TYPE:KindType = new KindType(252);
    public static JSDOC_TYPE_EXPRESSION:KindType = new KindType(247);
    public static JSDOC_TYPE_REFERENCE:KindType = new KindType(257);
    public static JSDOC_TYPE_TAG:KindType = new KindType(267);
    public static JSDOC_UNION_TYPE:KindType = new KindType(251);
    public static JSDOC_UNKNOWN_TYPE:KindType = new KindType(249);
    public static JSDOC_VARIADIC_TYPE:KindType = new KindType(260);
    public static JSX_ATTRIBUTE:KindType = new KindType(236);
    public static JSX_CLOSING_ELEMENT:KindType = new KindType(235);
    public static JSX_ELEMENT:KindType = new KindType(231);
    public static JSX_EXPRESSION:KindType = new KindType(238);
    public static JSX_OPENING_ELEMENT:KindType = new KindType(233);
    public static JSX_SELF_CLOSING_ELEMENT:KindType = new KindType(232);
    public static JSX_SPREAD_ATTRIBUTE:KindType = new KindType(237);
    public static JSX_TEXT:KindType = new KindType(234);
    public static LABELED_STATEMENT:KindType = new KindType(205);
    public static LAST_BINARY_OPERATOR:KindType = new KindType(66);
    public static LAST_FUTURE_RESERVED_WORD:KindType = new KindType(112);
    public static LAST_RESERVED_WORD:KindType = new KindType(103);
    public static LAST_TEMPLATE_TOKEN:KindType = new KindType(14);
    public static LAST_TOKEN:KindType = new KindType(132);
    public static LAST_TRIVIA_TOKEN:KindType = new KindType(7);
    public static LAST_TYPE_NODE:KindType = new KindType(158);
    public static LESS_THAN_EQUALS_TOKEN:KindType = new KindType(28);
    public static LESS_THAN_LESS_THAN_EQUALS_TOKEN:KindType = new KindType(61);
    public static LESS_THAN_LESS_THAN_TOKEN:KindType = new KindType(42);
    public static LESS_THAN_SLASH_TOKEN:KindType = new KindType(26);
    public static LET_KEYWORD:KindType = new KindType(106);
    public static METHOD_DECLARATION:KindType = new KindType(141);
    public static METHOD_SIGNATURE:KindType = new KindType(140);
    public static MINUS_EQUALS_TOKEN:KindType = new KindType(57);
    public static MINUS_MINUS_TOKEN:KindType = new KindType(41);
    public static MINUS_TOKEN:KindType = new KindType(36);
    public static MISSING_DECLARATION:KindType = new KindType(229);
    public static MODULE_BLOCK:KindType = new KindType(217);
    public static MODULE_DECLARATION:KindType = new KindType(216);
    public static MODULE_KEYWORD:KindType = new KindType(123);
    public static MULTI_LINE_COMMENT_TRIVIA:KindType = new KindType(3);
    public static NAMED_EXPORTS:KindType = new KindType(227);
    public static NAMED_IMPORTS:KindType = new KindType(223);
    public static NAMESPACE_IMPORT:KindType = new KindType(222);
    public static NAMESPACE_KEYWORD:KindType = new KindType(124);
    public static NEW_EXPRESSION:KindType = new KindType(167);
    public static NEW_KEYWORD:KindType = new KindType(90);
    public static NEW_LINE_TRIVIA:KindType = new KindType(4);
    public static NULL_KEYWORD:KindType = new KindType(91);
    public static NUMBER_KEYWORD:KindType = new KindType(126);
    public static OBJECT_BINDING_PATTERN:KindType = new KindType(159);
    public static OBJECT_LITERAL_EXPRESSION:KindType = new KindType(163);
    public static OMITTED_EXPRESSION:KindType = new KindType(185);
    public static OPEN_BRACKET_TOKEN:KindType = new KindType(19);
    public static OPEN_PAREN_TOKEN:KindType = new KindType(17);
    public static PACKAGE_KEYWORD:KindType = new KindType(107);
    public static PARAMETER:KindType = new KindType(136);
    public static PARENTHESIZED_EXPRESSION:KindType = new KindType(170);
    public static PERCENT_EQUALS_TOKEN:KindType = new KindType(60);
    public static PERCENT_TOKEN:KindType = new KindType(39);
    public static PLUS_EQUALS_TOKEN:KindType = new KindType(56);
    public static PLUS_PLUS_TOKEN:KindType = new KindType(40);
    public static PLUS_TOKEN:KindType = new KindType(35);
    public static POSTFIX_UNARY_EXPRESSION:KindType = new KindType(178);
    public static PREFIX_UNARY_EXPRESSION:KindType = new KindType(177);
    public static PRIVATE_KEYWORD:KindType = new KindType(108);
    public static PROPERTY_ACCESS_EXPRESSION:KindType = new KindType(164);
    public static PROPERTY_ASSIGNMENT:KindType = new KindType(243);
    public static PROPERTY_DECLARATION:KindType = new KindType(139);
    public static PROPERTY_SIGNATURE:KindType = new KindType(138);
    public static PROTECTED_KEYWORD:KindType = new KindType(109);
    public static PUBLIC_KEYWORD:KindType = new KindType(110);
    public static QUESTION_TOKEN:KindType = new KindType(52);
    public static REGULAR_EXPRESSION_LITERAL:KindType = new KindType(10);
    public static REQUIRE_KEYWORD:KindType = new KindType(125);
    public static RETURN_KEYWORD:KindType = new KindType(92);
    public static RETURN_STATEMENT:KindType = new KindType(202);
    public static SEMICOLON_CLASS_ELEMENT:KindType = new KindType(189);
    public static SEMICOLON_TOKEN:KindType = new KindType(23);
    public static SET_ACCESSOR:KindType = new KindType(144);
    public static SET_KEYWORD:KindType = new KindType(127);
    public static SHEBANG_TRIVIA:KindType = new KindType(6);
    public static SHORTHAND_PROPERTY_ASSIGNMENT:KindType = new KindType(244);
    public static SLASH_EQUALS_TOKEN:KindType = new KindType(59);
    public static SLASH_TOKEN:KindType = new KindType(38);
    public static SOURCE_FILE:KindType = new KindType(246);
    public static SPREAD_ELEMENT_EXPRESSION:KindType = new KindType(183);
    public static STATIC_KEYWORD:KindType = new KindType(111);
    public static STRING_KEYWORD:KindType = new KindType(128);
    public static STRING_LITERAL:KindType = new KindType(9);
    public static SUPER_KEYWORD:KindType = new KindType(93);
    public static SWITCH_KEYWORD:KindType = new KindType(94);
    public static SWITCH_STATEMENT:KindType = new KindType(204);
    public static SYMBOL_KEYWORD:KindType = new KindType(129);
    public static SYNTAX_LIST:KindType = new KindType(269);
    public static TAGGED_TEMPLATE_EXPRESSION:KindType = new KindType(168);
    public static TEMPLATE_EXPRESSION:KindType = new KindType(181);
    public static TEMPLATE_HEAD:KindType = new KindType(12);
    public static TEMPLATE_MIDDLE:KindType = new KindType(13);
    public static TEMPLATE_SPAN:KindType = new KindType(188);
    public static THIS_KEYWORD:KindType = new KindType(95);
    public static THROW_KEYWORD:KindType = new KindType(96);
    public static THROW_STATEMENT:KindType = new KindType(206);
    public static TILDE_TOKEN:KindType = new KindType(49);
    public static TRUE_KEYWORD:KindType = new KindType(97);
    public static TRY_KEYWORD:KindType = new KindType(98);
    public static TRY_STATEMENT:KindType = new KindType(207);
    public static TUPLE_TYPE:KindType = new KindType(155);
    public static TYPE_ALIAS_DECLARATION:KindType = new KindType(214);
    public static TYPE_ASSERTION_EXPRESSION:KindType = new KindType(169);
    public static TYPE_KEYWORD:KindType = new KindType(130);
    public static TYPE_LITERAL:KindType = new KindType(153);
    public static TYPE_OF_EXPRESSION:KindType = new KindType(174);
    public static TYPE_OF_KEYWORD:KindType = new KindType(99);
    public static TYPE_PARAMETER:KindType = new KindType(135);
    public static TYPE_PREDICATE:KindType = new KindType(148);
    public static TYPE_QUERY:KindType = new KindType(152);
    public static UNION_TYPE:KindType = new KindType(156);
    public static VARIABLE_DECLARATION:KindType = new KindType(209);
    public static VARIABLE_DECLARATION_LIST:KindType = new KindType(210);
    public static VARIABLE_STATEMENT:KindType = new KindType(191);
    public static VAR_KEYWORD:KindType = new KindType(100);
    public static VOID_EXPRESSION:KindType = new KindType(175);
    public static VOID_KEYWORD:KindType = new KindType(101);
    public static WHILE_KEYWORD:KindType = new KindType(102);
    public static WHILE_STATEMENT:KindType = new KindType(196);
    public static WHITESPACE_TRIVIA:KindType = new KindType(5);
    public static WITH_STATEMENT:KindType = new KindType(203);
    public static YIELD_EXPRESSION:KindType = new KindType(182);

}

export = KindType;
