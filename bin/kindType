#!/usr/bin/env node
"use strict";

var ts = require("typescript"),
    fs = require("fs"),
    path = require("path"),
    kinds = {},
    argv = require("optimist").
        usage("Usage: kindType -o [filename]\nGenerate actual KindType class.").
        demand("o").alias("o", "output").describe("o", "Output file location").
        argv,
    keys;

Object.keys(ts.SyntaxKind)
    .filter(function (key) {
        return /^\d+$/.test(String(key));
    })
    .forEach(function (key) {
        kinds[ts.SyntaxKind[key].replace(/([a-z])([A-Z])/g, "$1_$2").
            toUpperCase()] = parseInt(key, 10);
    });

keys = Object.keys(kinds);
keys.sort();

fs.writeFileSync(path.join(process.cwd(), argv.output), [
    "// This file was automatically generated.",
    "// Please don't edit this file by hand.", "",
    "class KindType {", "",
    "    private _value:number;", "",
    "    constructor(value:number) {",
    "        this._value = value;",
    "    }", "",
    "    public getValue():number {",
    "        return this._value;",
    "    }", "",
    "    public equal(value:any):boolean {",
    "        if (value instanceof KindType) {",
    "            return this._value === (<KindType>value).getValue();",
    "        }",
    "        return this._value === value;",
    "    }", "",
    keys.map(function (type) {
        return "    public static " + type + ":KindType = new KindType(" + String(kinds[type]) + ");";
    }).join("\n"),
    "", "}", "",
    "export = KindType;", ""
].join("\n"));
